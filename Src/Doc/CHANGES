$Id$

June 15, 1995


Changed files
-------------

All files


Code changes
------------

Removed "-sliders" option from command line.
        Also removed the "trlit", "trfr", "trat" and "clrtr" commands along
        with the sliders.  (These hooked up a light, the look from pt or
        the look at pt to the sliders.) (Dovey)

Removed "on/off dlist" option -- drawing no longer uses display lists.
                                 (I think this option was undocumented.)
				 (Dovey)

Removed "switch line" option -- this option just drew the mesh lines
                                and not the element interiors. (Dovey)

Removed "on/off bdrop" option -- draw backdrop (not very useful.)
                                 functionality superceded by external geom
                                 option (Dovey)

Removed split quad option -- "on/off splitq" and "nsplit"
                             functionality should be replaced by linear
                             texture mapping (Dovey)

Removed "on/off lights" option -- show lights.  This never worked all that
                                  well anyway. (Dovey)

Added "on/off cscale" command -- Turn on or off display of the scale on
                                 the colormap.  (ALERT MICHAEL of this!!!)
				 (Dovey)

Fixed bugs in "vcent" which caused hilite centering to not work and
   point centering to work only part of the time. (Dovey)

   Forms of "vcent" command:
   vcent hi			Center view on currently hilited object.
   vcent n <node number>	Center view on the given node.
   vcent <x> <y> <z>		Center view on object-space point (x,y,z).


Added interpolation modes:
   "switch noterp"  No interpolation, values at element centers are
                    drawn over the full polygons.
   "switch interp"  Regular color interpolation from polygon nodes.
   "switch gterp"   Good (but expensive) color interpolation.  Dices the
                    polygons into pixel-sized fragments.  Suggest users
                    give -s flag (single-buffer mode) to GRIZ when using
                    this option so they can watch the rendering process.

   (No interpolation mode was a request of Roger Logan's.) (Dovey)

Added "conmap <int n>" command -- contour the colormap with N stripes.
      This routine samples the current colormap at N places and then
      creates a band of each color.
      "chmap <int n>" -- Create a hot/cold colormap with N contours.
      "cgmap <int n>" -- Create a gray colormap with N contours.
      All of these routines are intended to be used with "switch gterp"
      (Dovey)

Fixed bug in handling of prism (wedge) elements that caused normals and
   colors to be associated with the wrong vertices. (Dovey)

Added point cloud option
      "sw cloud" -- goes with "sw solid" and "sw hidden".  Just draw the
      nodes of the grid as points.  Might be somewhat useful for verifying
      grid correctness. (Dovey)


OpenGL changes
--------------

    "camang" sets the camera angle for a perspective view.
    (Note the Y direction is irrelevant.  X or Y is chosen based on the
     aspect ratio of the window.) (Dovey)

    All colors are reals and are specified in the range [0, 1].
    This includes the "ldmap" command. (Dovey)

    (Optional) parameters for set_light are

        light <number> pos <x y z w> amb <r g b> diff <r g b> spec <r g b>
            spotdir <x y z> spotexp <exp> spotcut <cutoff_angle>

        Light numbers 1 to 6 can be set.  In OpenGL, lights are located
        in object space (they get transformed by the viewing transform.)
        Lights have four coordinates -- the last is 0 for a directional
        light and 1 for a positional light.  A positional light will
        give nicer shading, particularly when placed close to the object,
        but will probably slow rendering. (Dovey)

    Temporary problems:

        Mesh edges and contour lines blend into the polygons behind
        them.  This will be fixed in Irix5.3, which supplies and OpenGL
        extension to do the offsetting trick that we used previously.

        The "hidden" program is probably broken.

June 15, 1995

Bug fixes
    
    Isocontouring is fixed and now adapts to varying contour
    curvature. (Speck)
    
    Start-up text displays correctly so that top of text shows at
    beginning of session. (Speck)


July 10, 1995

New commands

    bbsrc n|h|s|b|hb|hs|sb|hsb
        Set the source to use for mesh bounding box calculation and reset 
	the view.  The letters "n", "h", "s", and "b" imply nodes, hex 
	elements, shells, and beams, respectively.  The default is "hsb", 
	which means GRIZ will set the bounding box based on the extents of 
	all elements in the mesh.  Previously, GRIZ set the bounding box by 
	the extents of the nodes.  For most meshes, these representations 
	will be the same (though using nodes directly is slightly more 
	efficient).  However, for some meshes there are nodes in the geometry 
	which aren't referenced by any elements, and if these nodes are
	positioned away from the elements then the rendered image will be 
	proportionately reduced in scale if the bounding box is based on 
	node extents rather than element extents. (Speck)
    
    bbox [<xmin> <ymin> <zmin> <xmax> <ymax> <zmax>]
        Reset the mesh bounding box and reset the view.  If coordinates 
	are given, use them explicitly as the bounding box extents, 
	otherwise recalculate the bounding box based on the current value 
	of the bounding box source (see "bbsrc") and mesh position of the 
	current state. (Speck)


August 9, 1995

New command
    on/off minmax
	Turn on/off display of min and max values for
	current result at current state.  Display is in
	upper lefthand corner of the rendering window.
	Includes element or node number at which min and
	max occur.  Note that for elemental results, the
	min and max will not necessarily match the colormap
	min and max because the colormap values represent
	elemental values interpolated back to the nodes.
	(Minmax is also selectable from the Rendering
	pulldown menu and by "on all".) (Speck)


August 10, 1995

Changed command
    on/off cmap
	Now shows value of strain type, shell reference surface, and
	strain basis for those results they apply to when cmap is on.
        (Speck)

August 11, 1995

Changed commands:
    ptstat
        New forms: ptstat t <time> <duration> [<delta_t>]
                   ptstat s <state> <duration> [<delta_t>]
	
        Because of floating point roundoff errors, it can be
	very difficult to specify a time for a trace that
	is an actual state time.  The new forms allow the
	user to trace at any state or at an arbitrary
	time.  Also, after a trace is completed, Griz now
	stays at the time of the trace rather than returning
	to the state active when ptstat was called. (Speck)

New commands:
    ptlim <qty integration steps>
        This limits the number of particle trace segments
	displayed to the most recent n steps.  It has the
	effect of shortening the traces to particle "tails"
	whose length is a function of the particle velocity
	history over the n steps.  The limit affects both
        static (ptstat) and dynamic (ptrace) particle
	traces, and is cleared when clrpar is called. (Speck)

August 18, 1995

Bug fix:
    After interactively resizing the rendering window, node
    or element picking was broken.  It works correctly now.
    (Dovey)

September 12, 1995

New Interface Component - The GRIZ Material Manager
    Select the "Material Mgr" option in the Control
    pulldown or just type <Ctrl>m while the cursor is in
    the main control window.
    
    The Material Manager allows convenient control of
    visibility/invisibility, enable/disable, and material
    color components and is particularly useful for meshes
    with large numbers of materials. (Speck)

Interface addition
    <Ctrl>q while the cursor is in the main control window
    will kill Griz. (Speck)
    
New result for Hydra databases
    Enstrophy, in the Nodal result submenu ("ens" on the
    command line).  Valid only for 3D Hydra databases.
    Enstrophy is one-half the square of the vorticity
    magnitude. (Speck)

September 26, 1995

New Interface Component - The GRIZ Utility Panel
    The Utility Panel unites some of the more commonly
    used functions on a single, readily accessed panel
    which can be called up as a standalone window or
    configured as part of the main control window.  The
    Utility Panel indicates the state of some current
    selections and provides "one-button" access to the
    command sequence "on edges"-"switch none" (useful for
    positioning relatively large meshes to avoid painfully
    slow redraws).  It also provides a convenient
    "step stride" feature which allows stepping through
    states in multiple-state increments.
    
    To call it up as a standalone window, select the
    "Utility Panel" option in the Control pulldown or type 
    <Ctrl>u while the cursor is in either the main control 
    window or the rendering window.  To configure it as 
    part of the main control window (appearing between 
    the feedback window and the command history window) 
    execute Griz with the "-u" command-line option. (Speck)

Bug fix - When executing the "load" command to examine
    a new database, the path/filename indicators in the
    titles of the main control and rendering windows are
    updated to reflect the new database. (Speck)

September 28, 1995

Bug fixes
    "Outps" should no longer crash after resizing the
    rendering window.  As it turns out, the error wasn't a 
    function of the size of the window, but whether or not
    the width of the window was an odd number. (Speck)
    
    Also, when Griz is started up the keyboard focus is
    automatically set to the command entry area so it's
    not necessary to move the cursor into the command
    entry area and click the mouse to establish focus.
    (Speck)
    
September 29, 1995

New Commands
    outrgb <filename>
        Dump the rendering window into a ".rgb" (SGI image
	file) file.
    outrgba <filename>
        Dump the rendering window into a ".rgba" (SGI image
	file with alpha channel) file.
    As with the "outps" command, these commands both 
    in effect read off of the screen so care must be taken
    to avoid occluding the rendering window with another
    window or icon.  Both rgb and rgba files are run-length
    encoded for compactness. (Speck)

Deprecated command
    outhdf - HDF output format is no longer supported.  Use
    rgb/rgba files instead.  Most utilities that process
    HDF image files also handle rgb files. (Speck)

October 19, 1995

New commands
    switch nodvec
    switch grdvec
        Set the source for vectors displayed with "on vec".
	The default is "nodvec", meaning vectors will be
	rendered at the nodes.  In "grdvec" mode, vectors
	will be rendered on any vgrids that have been
	defined.  If mode is "grdvec" and there are no
	vgrids when "on vec" is active, a warning is issued 
	and no vectors are rendered. (Sanford)

Changed command
    prake <filename> | <n> <x1> <y1> <z1> <x2> <y2> <z2> <rgb>
        Take a single prake specification from the command line
        or read one or more particle rake specifications from
	the text file specified by <filename>.  Blank lines
	and lines beginning with the pound symbol ("#") in
	the first column are ignored.  All other lines 
	should contain valid prake specifications, one per
	line but WITHOUT the word "prake" preceding the
	arguments. (Sanford)
	
Bug fixes
    Setting material shininess (from the command line or
    the Material Manager) works now and does not cause Griz
    to crash. (Speck)
    
    The "shininess" scale in the color editor of the
    Material Manager now ranges from 0 to 128, the full
    range allowed by OpenGL. (Speck)

October 20, 1995

Bug fix
    "Default" and "Cancel" actions would not update the current
    OpenGL material when a color editor action affected it.
    The current OpenGL material properties now are set to the 
    correct values. (Speck)

October 24, 1995

Bug fix
    "sw gterp" correctly renders geometry regardless of polygon
    size.  A logic error previously precluded subdivision of
    polygons which were approximately 2 pixels on a side. (Dovey)

October 25, 1995

New command
    outvec <filename>
        Write an ASCII file <filename> containing vector
        coordinates and vector component values.  If the
        switch "nodvec" is in effect, vector coordinates
        and vector component values at the nodes will be
        written.  If the switch "grdvec" is in effect,
        vector coordinates and vector component values
        of the vectors specified in any of the "vgridN"
        definitions will be written. (Sanford)

November 8, 1995

Bug fixes
    Fixed a very obscure bug which would cause a crash if
    you entered a command with exactly the maximum number
    of arguments (25) and added trailing blanks after the
    last argument.  As it turns out, this is not too hard
    to do if you have 15 or 20 (or more) materials and
    you're using the Material Manager. (Speck)

    View centering ("vcent...") wouldn't work properly if
    refresh was turned off. (Speck)

November 28, 1995

New commands
    aptrace <t_start> <t_end> <dt>
        This command is identical in functionality to the
	ptrace command except that it does not destroy
	any existing traces.  Rather, it appends new
	traces to the set of existing traces.  This allows, 
	for example, traces from a rake to be generated at 
	different times.  Used in conjunction with the 
	ptlim command to shorten the traces, aptrace can be 
	employed to generate repeated pulses of particles 
	and more fully illustrate the time-dependent nature 
	of a flow. (Speck)

    outpt <filename>
        Save current particle traces in the named file as
	ASCII text.  All information necessary for 
	displaying a trace is saved to the file. (Speck)

    inpt <filename>
        Read the named file, which should be output from a
	previous "outpt" command, and create particle
	traces.  No checking is performed to verify that 
	the traces in the file were actually created from
	the database loaded at the time of the "inpt"
	command. (Speck)
	
    ptdis <material> [,<material>...]
        Disable particle traces in the materials listed.
	When rendered, no particle trace steps which are
	contained partially or wholly within a
	"trace-disabled" material will be drawn.  Each
	invocation of "ptdis" replaces any previous
	invocation, so the results of successive calls are
	not cumulative.  Invoking "ptdis" with no arguments
	eliminates all trace disabling so traces are
	visible in all materials. (Speck)
	
    ptwid <trace width>
        Set the rendered width of particle traces in
	pixels.  Fractional widths are acceptable, although
	the fractional granularity is platform dependent.
	The specified width must be a positive non-zero 
	value. (Speck)

    on sphere
    off sphere (default)
        Turn on/off rendering of spheres at the base of 3D
	vectors. (Speck)

Deprecated command
    ldhmap
        HDF palettes are no longer supported.  A utility
	program "h2g" is provided which will convert HDF
	palette files into GRIZ colormap files which can
	be loaded with the "ldmap" command.
	
	"h2g" syntax is:
	    h2g <HDF palette file name>
	The output goes to standard out. (Speck)

February 29, 1996

New commands
    {on | off} conv
        Turn on (off) application of data units conversion.
	The scale and offset used in the conversion are
	specified with the "conv" command.  When conversion
	is on, mesh renderings and time histories display
	the scale and offset values used in the conversion.
	IMPORTANT - when data conversion is turned on, 
	result values specified with the commands "rmin",
	"rmax", "rzero", and "isov" are assumed to be in 
	the converted units.  If conversion is turned off
	following such specifications, the stored values
	are effectively converted back to "primal" units
	as well. (Sanford, Speck)
	
    conv <scale> <offset>
        Specify parameters for a linear data conversion
	of the form:
	         y_new = y_old * scale + offset
        "Scale" defaults to 1 and "offset" defaults to 0.
	(Sanford)
		 
    clrconv
        Reset data conversion parameters to their default
	values and turn conversion off. (Sanford)

    tellpos {n | b | s | h} <ident>
        Report the current coordinates of the specified 
	node, beam element, shell element, or hex element 
	to the feedback window.  For elements, the 
	coordinates of the nodes referenced by the element 
	are reported.  The report notes if an element is 
	an inactive SAND element. (Sanford, Speck)
	Examples:
	    tellpos n 123              # node 123
	    tellpos h 46               # hex element 46
	
    savtxt <filename>
        Start saving a copy of all text written to the 
	feedback window into the named text file. (Sanford)
	
    endtxt
        Stop saving feedback text and close the text file.
	(Sanford)
	
Changed commands
    "thsave" --> "outth"
        "thsave" is still accepted, but "outth" is the
	correct (documented) command to save time history
	output.  This change brings this output function
	into consistency with other file output commands
	(i.e., "outps", "outrgb", "outpt", etc.). (Speck)

Bug fixes
    The "dellit" command now works. (Speck, from Charman)
    
    Reflected polygons which are backfacing in the original
    mesh are no longer removed if they should be visible
    as reflected mesh faces. (Speck)
    
    Particle traces no longer require the user to specify
    a vector quantity with the "vec" command.  This was
    superfluous as the particle tracing code is hard-coded
    to use the velocity vector to integrate particle
    positions. (Sanford)

March 8, 1996

Changed commands
    light <n> <x> <y> <z> <w> [amb <r g b>] [diff <r g b>]
      [spec <r g b>] [spotdir <vx vy vz>] [spot <exp> <ang>]
	Light number <n> and homogeneous coordinates <x>, 
	<y>, <z>, and <w> are required (keyword "pos" is no 
	longer utilized), the other arguments are optional.
	Coordinate <w> should be 0 or 1.  If it is 0, the
	light is treated as a directional light, i.e., the
	direction to the light is the same for all objects
	in the scene.  See the GRIZ User Manual (Revision 1
	for GRIZ v2.0) for explanation of the optional
	arguments. (Dovey, Speck)

    vec res1 [res2 [res3]]
	Any component result may be specified as zero
	instead of a result name, and for all vectors 
	rendered that component's value will be zero. This
	functionality existed previously, but it would
	generate a warning and was undocumented. Any
	components left off, as before, are valued at zero.
        (Speck)

    {on | off} sclbyres
        Scale vector by result. When on, causes vectors to 
	be scaled onto the colormap using the current result's 
	min and max if there is a current result. (Speck)
	THIS IS NOT AN "ADVERTISED" FEATURE AND IS NOT DOCUMENTED
	IN REVISION 1 OF THE USER MANUAL.

April 5, 1996

New functionality
    <Ctrl><mouse pick>
        Picking an element while the Control key is 
	depressed will select or deselect the element's
	material in the Material Manager.  The element is 
	not hilited or selected.  If the Material Manager
	is not up, an information dialog pops up stating
	this fact.  <Ctrl>-picking a node generates a 
	dialog telling the user to pick an element.
	(Speck)
	NOT DOCUMENTED IN REVISION 1 OF USER MANUAL.

    <Shift><mouse pick>
        Picking a node or element while the Shift key is
	depressed effects a "tellpos" query on the picked
	object.  No hilite or selection occurs. (Speck)
	NOT DOCUMENTED IN REVISION 1 OF USER MANUAL.
	
Changed commands
    telem -> tellem
        For consistency with other "tell..." commands, 
	the correct form to report exploded view material
	associations is "tellem", although "telem" is,
	for the time being, still accepted. (Speck)

Bug fixes
    There was a time history plotting bug in which the y-
    axis tics would be labeled incorrectly if the min and
    max y-values were not exactly equal but differed only
    in the sixth or seventh significant figure.  This is
    fixed. (Speck)
    
    When rendering at an interpolated time (the "time"
    command), the time displayed in the window was the time
    for the last state preceding the interpolated time.
    The interpolated time is now displayed. (Speck)
    
    Related to the above bug, when displaying an 
    interpolated time and the "p" command was given, the
    next state displayed was the last state preceding the
    interpolated time minus one.  Now, the last state
    preceding the interpolated time is displayed. (Speck)
    
    If the foreground color wasn't black, the element
    edge lines in "hidden" mesh mode could be shaded
    incorrectly.  They are now shaded correctly. (Speck)

Internal changes
    popup_warning() replaced by popup_dialog(), which takes
    an enum parameter which specifies a dialog type among
    USAGE, INFO, and WARNING.  Motif Information popups are used
    for USAGE and INFO, Warning popups are used for WARNING.
    The calling text may now specify formatting like printf(),
    wrt_text(), etc. (Speck)

********
Revision 1 of User Manual locked.
********

April 9, 1996

Bug fixes
    Data is now re-gathered for time histories when
    plotting a result a second time after changing the
    basis, reference surface, or strain variety (if the
    result is affected by any of those parameters).
    Previously, Griz only checked the result id of
    previously-gathered results when determining whether
    or not to re-gather, so it could incorrectly display
    a result calculated with a different setting of one
    of the affecting parameters. (Speck)


April 17, 1996

    Put current version under CVS. (Speck)
    
    
April 18, 1996

Internal change
    Added D. Dovey update of faces.c which implements
    a new face table structure and improved performance.
    (Dovey)

April 26, 1996

Bug fix
    Added depth-buffer bias to ensure edge lines are 
    always rendered in front of mesh polygons. This
    cures the tendency of coincident edge lines and
    polygons to "interleave" in Z (see new command
    "edgbias"). Also added similar treatment to beam 
    elements, since they are rendered as lines and
    are susceptible to the same effect. The bias for
    beams may be turned on or off (see new command
    "on/off bmbias"). (Speck)

New commands

    edgbias <bias value>
        Set the depth-buffer bias value used when
	rendering edge lines ("on edges").  The value
	should be a small positive number between zero
	and one.  The default is 0.005.  The value is
	clamped to [0,1]. Larger values of the bias
	increase the depth-offset between the edge lines
	and mesh polygons and may be necessary with
	lines that have a large Z-slope, but large biases
	also introduce unsightly artifacts at some edge
	line junctions, so a compromise is necessary.
	(Speck)

    on/off bmbias
        Turn on or off the use of depth-buffer bias
	when rendering beam elements.  The bias is
	on by default.  The value of the bias is not
	currently adjustable. (Speck)

June 25, 1996

New functionality
    Colormap value scale - The colormap now displays a
    scale of values along its left side.  Scale values are
    selected to fall on "round" values between the result
    min and max (including zero, for example).  An
    alternative implementation could always pick a set
    number of scale values equally spaced between the min
    and max and let the values fall where they may.  If
    you have any feedback, please submit it to Doug Speck
    or Larry Sanford. (Sanford)
    
    Rendered text is now anti-aliased. (Speck)

Internal change
    Un-did, by commenting out two "glEnable( GL_LIGHTING )" 
    and two "glDisable( GL_LIGHTING )" calls, the bug fix
    of 5 April which allowed mesh edge lines to be shaded
    if the foreground color wasn't black.  This fix seems
    to expose a vulnerability to an apparently long-standing
    bug which causes some aspects of rendering to become
    hosed if transitioning from a 2D to a 3D mesh or when
    post-processing (some?) 2D meshes.  With the bug fix
    in place, if the old bug is exposed it causes all
    elements to be rendered black or some dark color.  The
    old bug has been seen in a late '94 binary and shows
    up in corrupted depth-buffering (and something else -
    see email with Ed Bouch @ Sandia). (Speck)

June 27, 1996

Bug fix
    Colormap scale adjusted position of both min and max
    values if either rmin or rmax were set.  Now only the
    appropriate value's position is adjusted. (Sanford)

Internal change
    Replaced bzero, bcopy calls with equivalent "mem..." calls.
    (Sanford)

July 23, 1996

New commands
    fracsz <qty digits>
        Set the number of digits to render after the decimal
	point on the colormap scale, node/element min/max
	values, result values on selected nodes/elements,
	and on time-history plot axis scales.  This does
	NOT override "on autosz" on time-history plots.
	Set to two by default. (Speck)
	
    on/off autosz
        With "autosz" on, Griz will automatically calculate
	the number of decimal digits to render on time-
	history plot axis scales so that numeric
	differences between adjacent values will be 
	resolved with a minimal number of digits.  The 
	number of digits after the decimal point is bounded 
	to [1,6].  This feature is on by default. (Speck)
	
    on/off bbmax
        With "bbmax" on, Griz defines the mesh bounding box
	by only the largest displacement magnitude values 
	experienced across all invocations of the "bbox" 
	command.  The intent of this is that, by invoking 
	"bbox" at appropriate states, one can set the 
	bounding box, and by derivation the mesh view, to a 
	size that will encompass the mesh regardless of 
	displacement.  However, if explicit box values are 
	given with the "bbox" command, they will be used 
	regardless of "bbmax" setting.  This feature is off
	by default. (Speck)
	
New functionality
    The Griz cursor changes shape to provide user feedback
    during various operations.  This functionality can be
    added to any Griz operation, and users are welcome to
    make suggestions if they note a relatively slow
    operation during which it would be appropriate to change
    the cursor shape (to a watch, for example). (Speck)

Bug fixes
    Griz now recognizes and reads LLNL Topaz databases,
    accessing nodal temperature correctly. (Speck)
    
    
October 24 1996

New commands
    conwid <width>
        Set the line width for isocontours. <width> is a
	floating point number greater than zero. Fractional
	widths are allowable, but actual resolution is
	platform dependent.  The default width is 1.0.
	(Speck)
	
    on/off zlines   (Default: on)
        This controls whether or not antialiased lines
	(edge lines and beam elements) are depth-buffered
	with respect to each other.  With zlines on, they
	are depth-buffered and so render correctly in
	depth.  However, there are some rendering artifacts
	which appear in this mode which can be distracting
	during  video-animations.  With zlines off, those
	artifacts disappear but depth-buffering may be
	incorrect.  GRIZ PREVIOUSLY BEHAVED AS IF ZLINES
	WERE OFF. (Speck)

    setcol rmin <red value> <green value> <blue value>
    setcol rmax <red value> <green value> <blue value>
        These allow users to set the result threshold
	colors used when "rmin" or "rmax" values are set.
	The initial default values are still the same
	(magenta for rmin and red for rmax).  Reloading the
	current colormap ("hotmap" command produces the
	standard hot-cold colormap) while rmin and/or rmax
	are active overwrites the current rmin and rmax
	colors with whatever is in the colormap; rmin/rmax
	colors set with "setcol" can be put back into the
	colormap by repeating the rmin or rmax command.
	All red/green/blue color values are on [0.0, 1.0].
	(Speck)
	
New functionality
    Setting rmin or rmax values does not reset the current
    colormap, it just replaces the colors in the first
    and/or last entries of the current colormap with the
    current rmin/rmax colors.  Previously, using rmin or
    rmax with one of Griz's internal colormaps (hot-cold
    or grey-scale) caused the colormap to be reset to a
    hot-cold colormap variant. (Speck)
    
    Using "switch mstat" or "switch mglob" does NOT
    override any rmin or rmax values currently in effect.
    (Speck)
	
Bug fixes
    Output from the "outobj" command has been corrected.
    (Speck)
    
    Errors which occur during rgb-file output (such as when
    attempting to overwrite an existing file) no longer 
    cause Griz to exit. (Speck)
    
    The maximum number of materials has been increased to
    300. Griz exits with a diagnostic if it is given a mesh
    with more than the maximum number of materials, as this
    presently requires a re-compile to accommodate. (Speck)
    
    Toggle button widgets in the Material Manager and 
    Utility Panel now refresh their appearance properly to
    reflect current state.  This error did not occur under
    IRIX 5.x, but did happen under IRIX 6.2 and Solaris.
    (Speck)
    
    Colorscale labeling and color interpolation when result
    interpolation is turned off ("switch noterp") are now
    correct; "globmm" saves non-interpolated (element)
    values during its database traversal and colormapping
    with global results ("switch mglob") when "switch
    noterp" is in effect is correct; nodal result viewing
    is correct when "switch noterp" is in effect (nodal
    results never need to be interpolated so noterp/interp
    makes no difference); beam result color interpolation
    has been corrected (beams are always rendered without
    result interpolation, unlike other elements, but
    previously the non-interpolated min and max were
    erroneously limited to the min and max produced by
    by averaging element values to the nodes). (Speck)
    
    View centering ("vcent...") during animations works.
    (Speck)
    
    Meshes which contain both beam and shell elements now
    display the beams properly. (Speck)


October 28 1996

(These should have been documented with the October 24
changes above, although they have actually been in the
code for several weeks prior to the other 10/24 changes.)

New commands
    conwid <width>
        Set the line width for isocontours. <width> is a
	floating point number greater than zero. Fractional
	widths are allowable, but actual resolution is
	platform dependent.  The default width is 1.0.
	(Speck)
	
Bug fixes
    Output from the "outobj" command has been corrected.
    (Speck)


December 10 1996

New commands
    tellmm [<result> [<first state> [<last state>]]]
        Generate a report of result min/max values, writing
	it to the feedback window.  With no parameters,
	tellmm generates a report for the currently
	displayed result over all states in the database.
	If only <result> is specified, the min/max values
	for that result over all states in the database are
	reported, so a report can be generated for any
	result, regardless of what is currently displayed
	on the mesh.  If <result> and <first state> are 
	specified, tellmm reports the min and max for the
	result at that state only.  If <last state> is
	also specified, tellmm reports the min/max values
	between <first state> and <last state>, inclusive.
	The report includes the element or node at which
	the min/max values occur as well as a summary
	giving the overall min and max for the states
	traversed for the report.
	
	Tellmm is like the globmm command in that it
	updates the cached global min/max for a particular
	result.  This means that, if "switch mglob" is in
	effect, a tellmm command may update the min and
	max values on the colorscale, causing a change in
	the appearance of the current fringe plot. (Sanford)

Bug fixes
    "on/off ndnum" and "on/off elnum" have been fixed.
    (Sanford)


February 13 1997

Bug fix
    Updated effective stress calculation for hex's and
    shells with a re-derived expression (courtesy of E.
    Zywicz) that avoids the possibility of a negative input
    to the sqrt() function.  This was causing bombs under
    UNICOS when the calculated pressure was exactly opposite
    the sigma 1, 2, and 3 components, but adding them together
    produced a small negative number instead of zero. (Speck)


March 25 1997

New results
    Volumetric Strain - "evol"
        This derived result is the natural log of the
	relative volume ("relvol"). (Speck)

    Seven results formerly available only for brick
    elements are now available for shell elements as well.
    They are:
        "Prin Dev Stress 1" ("pdev1"), 
        "Prin Dev Stress 2" ("pdev2"), 
        "Prin Dev Stress 3" ("pdev3"), 
        "Maximum Shear Stress" ("maxshr"), 
        "Principal Stress 1", ("prin1"),
        "Principal Stress 2", ("prin2"), and
        "Principal Stress 3", ("prin3").
    These results are now found in the "Shared" result
    menu. (Speck)

New command
    bbox vis
        Calculate a new bounding box for the mesh based
	upon the extents only of visible materials.  The
	"rnf" command attempts to reset the near/far
	clipping planes on the basis of the Z-extents of
	the bounding box.  At large scale factors, the
	bounding box may extend behind the visualization
	eyepoint, causing the "rnf" command to fail.  This
	new variation of the "bbox" command allows the user
	to calculate a potentially smaller bounding box
	which may allow the "rnf" command to succeed in
	those cases. (Speck)

New functionality
    View centering ("vcent...") now centers the mesh in Z
    as well as X and Y, automatically positioning the
    depth of the mesh to keep the view centering point
    centered between the near and far clipping planes.
    This can be useful when applying large scale factors
    that cause the mesh to (apparently) disappear.  A
    side-effect of this functionality is that issuing an
    "rnf" command with view centering on can result in
    a sudden jump forward or backward of the mesh as it
    is re-centered between the new near/far clipping 
    planes. (Speck)
    
    The warning popup dialog for an "rnf" failure has
    been re-written to be more helpful. (Speck)


April 1 1997

New commands
    bufqty {all | n | h | s | b} <buffer quantity>
        Set the number of states' data which is buffered
	in memory for a particular mesh object type
	("n" for nodes, "h" for hex elements, "s" for
	shells, and "b" for beams), or for all types, to
	avoid redundant disk accesses during result
	computation.  By default, one states' data is 
	buffered ("bufqty all 1").  Former behavior was 
	equivalent to "bufqty all 0", in which no data is
	buffered.  Buffering data can lead to significant
	speedups for result computations which require
	as inputs several primal results from the plotfile
	database.  With no buffering, each primal result
	causes disk access. 
	
	When viewing results at interpolated time values, 
	a buffer quantity of two can offer further 
	performance improvement by limiting or eliminating 
	disk accesses for some time values.  There are 
	other analysis patterns which can benefit from
	using two buffers, and unless memory is an issue
	users may wish to make that their normal operating
	mode.  For most users, there's probably no advantage
	in ever setting the buffer quantity above two. (Speck)
    
    on derivtime
        Turn on timing of derived result computation.  This
	function is exclusive of "on timing", with "timing"
	having precedence, since the "timing" metric includes
	result computation and the nature of the resource
	monitoring interface precludes simultaneous
	evaluations.  They can both be "on" simultaneously,
	but only the "timing" metric will cause output.
	(Speck)

Internal change
    Added RENEW_N macro (misc.h) and supporting verbose_realloc()
    function (misc.c). (Speck)


April 4 1997

New result
    Plastic strain rate
        By setting "switch rate" while the current result
	is Effective Plastic Strain ("eeff"), the derived
	result is the rate of change of "eeff".  This is
	calculated by a simple first order central 
	difference approximation.  Users should be aware
	that it will return a non-zero rate at times when
	"eeff" is itself zero if "eeff" at the next or
	previous time step is non-zero.
	
	When this calculation is in effect, the rendering
	window contains this annotation:
	    "Result type: Time derivative"
	This is to distinguish this result from the
	(correct) tensor strain rate calculation that is 
	performed on hex element strain results when
	"switch rate" is in effect.  For those strains,
	the annotation is "Strain Type: Rate". (Speck)

New functionality
    Results that are affected by the element reference
    frame, strain type, or shell surface now have
    annotations giving the current settings of those
    parameters appended to their Y-axis labels on
    time history plots. (Speck)
    
Bug fix
    Calculation of hex strains when "switch rate" is in
    effect has been made approximately five times faster
    by restructuring the logic to eliminate redundant 
    disk accesses. (Speck)


May 16 1997
    
Bug fix
    View centering on a node or element now takes 
    displacement scaling ("dscal", "dscalx", etc.) into
    account.  Note that when centering the view on an 
    arbitrary point in space, displacement scale factors 
    have no effect. (Speck)


May 19 1997

New command
    on/off lighting
        Turn on or off use of lighting calculation to shade
	mesh polygons of 3D meshes.  By default, lighting
	is on.  With lighting off, shading of facets is 
	independent of their orientation.  This can allow
	more accurate interpretation of color fringes, but
	spatial orientation cues provided by lit facets are
	lost.  Rendering time is approximately 10 percent
	faster with lighting off. (Speck)


July 24 1997

New functionality
    Reference surface definition files can now optionally
    specify a material number on the first line after
    the face count.  By specifying a material number
    other than the actual material for the elements
    providing the reference surface faces, the user can
    (1) unlink the reference surface from translations of 
    the actual material and (2) control the color of the 
    reference surface independently of the actual material.
    The material number specified in the reference surface
    file can be any number less than or equal the maximum
    number of materials allowed (currently 300).  If the
    material number is one of the actual materials in the
    mesh, the reference surface will be tied to transla-
    tions of that material.  In all cases, whether or not a
    material number is specified, if "switch gterp" is in 
    effect, a result will be rendered on the reference
    surface unless the material is disabled (even if
    "off refres" is in effect - this is a flaw in the
    existing "on/off refres" logic). (Speck)
    
    If "on title" is in effect, the title is rendered on
    time history plots. (Speck)


July 25 1997

New command
    minmov <pixel distance>
        The minmov command provides a cursor motion margin 
	of error for node/element picks. It sets a threshold 
	distance the cursor must be moved with the mouse 
	before GRIZ treats the motion as intentional 
	manipulation of the mesh.  Continuous moves totaling 
	less than the threshold distance, when the mouse 
	button is released, are treated as node/element 
	picks (with the pick position being the cursor 
	position when the mouse button was first depressed). 
	(Speck)


August 1 1997

Changed commands
    clrsel [{{node|n}|{beam|b}|{shell|s}|{brick|h}} <n>...]
        The "clrsel" command now optionally takes a list of
	node or element numbers to allow de-selections of a
	subset of currently selected objects.  (See "New
	functionality" below regarding de-selections with
	the mouse and cursor.) (Speck)
    
New functionality
    Node and element picks (hilites or selects) with the
    mouse and cursor are now toggles - the first pick
    selects (or hilites), another pick de-selects 
    (de-hilites). (Speck)
    
    The default font for the GUI has been changed to a
    font which is widely supported across vendors. (Speck)

Bug fix
    Routine compute_shell_eff_strain() was referencing
    geom brick data instead of shell data.  This error was
    introduced recently (presumably) when adding rate
    estimation. (Speck)

Internal changes
    Routing is_in_iarray() (misc.c) now takes an int pointer
    at which to write the index number of the candidate
    when found. (Speck)
    
    Replaced wrt_text() calls for "hilite", "select", and
    "clrsel" commands with popup_dialog() calls. (Speck)


August 20 1997

New commands
    outref <filename> [x|y|z <coord value>]...
        The "outref" command allows the user to create
	a reference surface definition file from the
	current set of visible external hex element faces.
	With no constraints specified, the entire face
	table is written out as a reference surface.
	Constraints consist of a dimension specifier
	(a letter "x", "y", or "z") and a coordinate
	value.  When a constraint is specified, only those
	external element faces for which all four nodes
	are within an epsilon (currently .001) of the
	constraint value, in the constrained dimension,
	are output to the file (using the initial positions
	of the nodes for comparison).  Practically, this 
	means that only axis-aligned subsets of the 
	external face table can be written.  Any number of 
	constraints can be specified. (Speck)
    

October 9 1997

Bug fix
    The "getedg" command, executed after a material
    translation, now correctly generates a new edge set.
    This correction was implemented by modifying
    edge_node_cmp() to perform further comparisons of
    material number and relative material translation if
    edge nodes are identical.  This causes further sorting
    of multiple references to the same edge, keeping like
    materials together and (relatively) translated
    materials apart, allowing correct identification of
    visual edges.
    (Speck)


November 13 1997

Name correction
    The titles for shell results "res3" ("M_zz Bending
    Resultant") and "res8" ("N_zz Bending Resultant") have
    been corrected (to "M_xy Bending Resultant" and "N_xy
    Bending Resultant", respectively). (Speck)
    
    
November 14 1997

Bug fix
    Exposing the rendering window with refresh off will
    not cause a redraw.  Internally, the refresh state
    variable which was a local static variable in 
    parse_command() is now a field of the Analysis
    struct, and expose_CB() checks it before calling
    update_display(). (Speck)
    

January 9, 1998

New commands
    dirv <x component> <y component> [<z component>]
        Specifies a direction vector in the mesh coordinate
        system. (Speck)
    dir3n <node 1> <node 2> <node 3>
        Specifies a direction vector in the mesh coordinate
        system as the normal to a plane defined by the 
        positions of three mesh nodes at the current state 
        (right-hand rule determines positive direction).
        (Speck)
    dir3p <x1> <y1> <z1> <x2> <y2> <z2> <x3> <y3> <z3>
        Specifies a direction vector in the mesh coordinate
        system as the normal to a plane defined by the
        three specified points (right-hand rule applies).
        (Speck)

New result
    Projected Vector Magnitude - "pvmag"
        This nodal result requires that both a direction 
        vector ("dirv", "dir3n", or "dir3p" commands) and a
        vector result ("vec" command) be defined.  Given 
        those, "pvmag" is the magnitude of the vector 
        value at each node when projected onto the defined 
        direction vector, i.e., the component of the vector
        in that direction.
        
        Example - The following commands would show the 
        magnitude of the displacement parallel to a line 
        midway between the X, Y, and Z axes:
            vec dispx dispy dispz
            dirv 1 1 1
            show pvmag

        When "pvmag" is the current result, the components
        forming the vector quantity are listed beneath
        the result title above the colormap, and the 
        current direction vector is rendered as a red line
        coming out of the origin of the coordinate system
        orientation display (The coordinate system 
        orientation is rendered when "on coord" or "on all" 
        are in effect). (Speck)


March 24, 1998
                     
New functionality
    Griz has an initial capability to detect and read
    LS-Dyna plot databases.  Due to conflicts in the 
    interpretation of certain control words between
    Livermore Software and MDG codes, it's not clear how
    robust this initial capability is, but we will
    continue to refine it as necessary. (Speck)
    

April 3, 1998

New commands
    inrgb [bg] <rgb filename>
        Load the indicated rgb image file into memory.  If
        the "bg" switch is not given, the image is
        immediately loaded into the framebuffer and freed
        from memory.  The image will stay in the window
        until any activity causes Griz to redraw.  If the
        "bg" switch is given, the image is not immediately 
        loaded into the framebuffer but is saved 
        indefinitely for use as an alternative background 
        in the rendering window.  To employ the image as a 
        background use the "on bgimage" command (below).
        Whenever an rgb image is loaded into the 
        framebuffer, the lower left corner of the image is
        placed at the lower left corner of the rendering
        window.  If in any dimension the image is larger
        than the window, the image is cropped.  If in any
        dimension the window is larger than the image, the
        extra space is filled in the current background
        color ("setcol bg <r> <g> <b>"). (Speck)
    on/off bgimage
        Turn on (off) utilization of the current background 
        rgb image as the background for the rendering 
        window.  If no image is currently loaded into
        memory, there is no effect, but as soon as a
        subsequent "inrgb bg <file>" command is parsed, the
        loaded image will immediately show up in the 
        background. (Speck)
    

June 4, 1998

New commands
    on/off coordxf
        Turn on or off transformations of stress or
        strain results into an alternative global
        coordinate system.  The results affected are sx,
        sy, sz, sxy, syz, szx, epsx, epsy, epsz, epsxy,
        epsyz, and epszx.  The alternative coordinate system
        is specified with the "coordxf" command (below).
        When both "on coord" and "on coordxf" are in effect,
        both the original and alternative coordinate
        triples are rendered with a common origin.  The
        alternative coordinate system is rendered in brown, 
        with lower-case "x", "y", and "z" axis labels, 
        whereas the original coordinate system is rendered 
        in black with upper-case labels as before. (Speck)
    coordxf <x1> <y1> <z1> <x2> <y2> <z2> <x3> <y3> <z3>
    coordxf <node 1> <node 2> <node 3>
        Specify a coordinate system for stress/strain
        result transformations.  The specification requires
        the definition of three points in the mesh global
        coordinate system.  The two forms of the command
        allow the user to specify the coordinates of the
        three points explicitly (first form above) or to
        use the current coordinates of three mesh nodes.
        The transformation coordinate system is derived
        from the three points as follows:  The ray from 
        point 1 through point 2 defines the positive X-axis
        of the new coordinate system.  The positive Y-axis
        is the ray, perpendicular to and originating on
        the X-axis, which contains point 3.  The positive 
        Z-axis is formed by crossing the X-axis into the 
        Y-axis (right-hand rule). (Speck)
    resetmm
        Reset the global min and max for the current result
        to the current state min and max and delete any
        cached min/max generated from calculating the
        result at other states.  This has the effect of 
        nullifying a previous "globmm" command with the 
        current result active and making it seem as if only
        the current state had been visited for the current 
        result.  The intent of this command is to prevent 
        distortions of cached min/max values for results 
        which can undergo transformations that might 
        generate different mins/maxs at already-visited 
        states.  Specifically, a stress or strain that is 
        transformed to a different coordinate system 
        ("on coordxf", above), or a "pvmag" result (above)
        in which the driving vector definition is changed 
        will create different value domains from which 
        mins/maxs are taken, but the min/max caching 
        facility does not take this into account.  By
        issuing a "resetmm" command immediately after
        applying a new coordinate transformation or new 
        vector definition, and again when a transformation
        is removed, one can ensure that cached mins/maxs
        originate from the same result value domain as the 
        currently viewed result. (Speck)
 

June 24, 1998

Bug fix
    Invoking a units conversion ("conv" and "on/off conv")
    now affects vectors ("vec" and "on/off vec"). (Speck)

March 24, 1999

New command
    outmm <file name> [<mat>...]
        Write a report of min/max values at all states for
        the current result to the named file.  If the
        current result is an element rather than nodal
        result, individual reports are generated for
        each material in the mesh that supports the current
        result.  If one or more material numbers are listed
        on the command line, reports are generated only for
        those materials (assuming they support the result).
        Material numbers have no affect if the current
        result is a nodal quantity. (Speck)

Bug fix
    Dates in output are now given in local time rather than
    Greenwich Mean Time. (Speck)
    
Internal change
    Function is_numeric_string() in file interpret.c was
    changed from file scope to global scope.

