#!/bin/csh -f
#
# $Id$
#
#   ****************************************************************
#   * (c) Copyright 1996 The Regents of the University of          *
#   *     California.  All Rights Reserved.                        *
#   *                                                              *
#   *     This work was produced under the sponsorship of the      *
#   *     United States Department of Energy.  The Government      *
#   *     retains certain rights therein.                          *
#   ****************************************************************
#
#*******************************************************************
#  Revision History:
#   22-Aug-96  Original version.
#              (Robert J. Sherwood)
#
#   11-Dec-96  Added support for GLX/X distinction, Sun FFB, and
#              OSF/Irix and OSF/Sun peculiarities
#              (Doug Speck)

#   11-Nov-02  Changes to support maintaining multiple versions 
#              of Griz4
#              (I. R. Corey)
#*******************************************************************

# set echo
setenv PATH ${PATH}:/usr/bin/X11

setenv GRIZHOME /mdg/bin/griz4s-V4_04-dir

# Good for all except OSF; reset under OSF block below
setenv HFONTLIB /mdg/lib/font/Hershey/sgi_sun_ibm_hp

set system = `/bin/uname -s`
set release = `/bin/uname -r`
set majorrelease = $release:r

# Get the first digit of the release

while ($majorrelease != $release)
  set release = $majorrelease
  set majorrelease = $release:r
end

# Capture display host information

if ($system != OSF1) then

  set glx = `xdpyinfo | awk '/^ *GLX/ {print $1}'`
  set vendor = `xdpyinfo | awk '/vendor string/ {print $3}'`
  set x_release = `xdpyinfo | awk '/vendor release number/ {print $4}'`
  
else

  set glx = `${GRIZHOME}/xqext.osf GLX`
  set vendor = `${GRIZHOME}/xqvendor.osf | awk '/vendor string/ {print $3}'`
  set x_release = `${GRIZHOME}/xqrelease.osf | awk '/vendor release number/ {print $4}'`

endif

# Generate the appropriate extension for the operating system,
# local hardware, and remote (display) hardware combination:
#
#   SYSTEM     VERSION     LOCAL CAP     DISPLAY CAP     EXTENSION
#
#    IRIX       (any)        (any)           GLX           .sgi
#    IRIX       (any)        (any)            X            .sgi.mesa
#
#   SunOS        4.x         (any)          (any)          .sun.np
#
#   SunOS        5.x       Ultra FFB         GLX           .ultra
#   SunOS        5.x       Ultra FFB          X            .sol
#   SunOS        5.x        (other)         (any)          .sol
#
# Digital UNIX   3.x         (any)           GLX           .osf.mesa
# Digital UNIX   3.x         (any)            X            .osf.mesa
# Digital UNIX   3.x         (any)      GLX (IRIX 5.x)     .osf.mesa
# Digital UNIX   3.x         (any)      GLX (Solaris)      .osf.mesa

if (($system == IRIX) || ($system == IRIX64)) then

  if ( $glx == GLX ) then
    set extension = sgi
  else
    set extension = sgi.mesa
  endif

else if ($system == OSF1) then

  unsetenv HFONTLIB
  setenv HFONTLIB /mdg/lib/font/Hershey/osf

  if ($vendor == Silicon) then
    
    if ($x_release == 5000) then
      set extension = osf.mesa
    else
      set extension = osf.mesa
    endif

  else if ($vendor == Sun) then

#   For now, Sun GLX doesn't work with OSF clients.
    if ($glx == GLX) then
      set extension = osf.mesa
    else
      set extension = osf.mesa
    endif

  else if ($glx == GLX) then
    set extension = osf.mesa
  else
    set extension = osf.mesa
  endif

else if ($system == SunOS) then

  if ($majorrelease == 4) then
    set extension = sun.np
  else if ($majorrelease == 5) then  
  
#   Capture presence of Fast Framebuffer
    set ffb = `/usr/sbin/prtconf | awk -F, '/ffb/ {print $2}'`
    
    if ($glx == GLX) then
    
      if ($ffb == ffb) then
        set extension = ultra
      else
        set extension = sol
      endif
      
    else
      set extension = sol
    endif
    
    setenv LD_LIBRARY_PATH /opt/SUNWspro/lib:/usr/lib:/usr/dt/lib:/usr/openwin/lib:/usr/ucblib
    
  else
  
    echo "ERROR: You are trying to run GRIZ on a $system release $majorrelease system."
    echo "GRIZ is not currently available for that release of $system."
    goto contactmdg          # Print contact info and take error exit.
    
  endif

else
  echo "ERROR:  You are trying to run GRIZ on a $system system."
  echo "GRIZ is not currently available for $system systems."
  goto contactmdg            # Print contact info and take error exit.
endif

# echo "system=${system} release=$release majorrelease=$majorrelease."
# echo "Extension=$extension."

# Execute the appropriate executable, and return its exit status

$GRIZHOME/griz.$extension $*
exit

# Error exit

contactmdg:
echo "Please contact the Methods Development Group."
echo "ABORTING."
exit -1
